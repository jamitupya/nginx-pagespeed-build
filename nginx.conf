user nginx nginx;
worker_processes 1;

error_log /var/log/nginx/crit.log crit;

### Load Dynamic modules ###
load_module "modules/ngx_http_geoip_module.so";
load_module "modules/ngx_http_image_filter_module.so";
#load_module "modules/ngx_mail_module.so";
#load_module "modules/ngx_stream_module.so";
load_module "modules/ngx_pagespeed.so";
#load_module "modules/ngx_http_brotli_filter_module.so";
#load_module "modules/ngx_http_brotli_static_module.so";
load_module "modules/ndk_http_module.so";
load_module "modules/ngx_http_lua_module.so";
load_module "modules/ngx_http_lua_upstream_module.so";
load_module "modules/ngx_http_headers_more_filter_module.so";
load_module "modules/ngx_http_testcookie_access_module.so";
load_module "modules/ngx_dynamic_upstream_module.so";
	
pid /var/run/nginx.pid;

events {
	worker_connections 20000;
	use epoll;
}
worker_rlimit_nofile 40000;
ssl_engine dynamic;
	
http {
### Basic Configuration ###
	default_type application/octet-stream;
	sendfile on;
	keepalive_timeout 30;
	types_hash_bucket_size 64;
	server_names_hash_bucket_size 128;
	gzip on;
	gzip_comp_level 4;
	gzip_min_length 100;
	gzip_http_version 1.1;
	gzip_vary on;
	client_max_body_size 1m;
	server_tokens off;
	access_log off;
	open_file_cache max=50000 inactive=5m;
	open_file_cache_valid 2m;
	open_file_cache_min_uses 1;
#	open_file_cache_errors on;

### Proxy configuration ###	
	proxy_cache_min_uses 4;
	proxy_cache_valid 1h;
	proxy_connect_timeout 60s;
	proxy_read_timeout 120s;
	proxy_send_timeout 60s;
	proxy_buffers 128 16k;
	proxy_buffer_size 256k;
	proxy_busy_buffers_size 256k;
	proxy_cache_path /tmp/cache levels=1:2 keys_zone=SHARED:10m inactive=24h max_size=1g;
	proxy_cache_path /tmp/proxy levels=1:2 keys_zone=PROXYCACHE:10m inactive=24h max_size=1g;
	
### GeoIP Configuration ###
# NOTE; these should be mounted as external files from the container. you can use something such as; 
	geoip_city /etc/nginx/GeoIPCity.dat;
	geoip_country /etc/nginx/GeoIP.dat;

### Logging Configuration ###
	log_format fulllog '$remote_addr [$time_local] $host $http_host '
                    '"$request" "$request_body" "$resp_body" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    '"$request_time" "$upstream_response_time" '
                    '"$gzip_ratio" $sent_http_x_cache "$http_cookie"';
                    
    log_format fulllogssl '$remote_addr [$time_local] $host $http_host '
                    '"$request" "$request_body" "$resp_body" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    '"$request_time" "$upstream_response_time" '
                    '"$ssl_protocol/$ssl_cipher/$ssl_session_id/$ssl_session_reused" '
#                    '"$brotli_ratio" "$gzip_ratio" $sent_http_x_cache "$http_cookie"';	
                    '"$gzip_ratio" $sent_http_x_cache "$http_cookie"';	
### WAF configuration ###
#	include 'conf.d/waf/naxsi_core.rules';		    
	include 'conf.d/waf/ip_global_blocks.conf';
	include 'conf.d/blacklists/*.conf';
	include 'conf.d/whitelists/*.conf';

### Default Server ###
	server {
	listen 80 default_server;
            location / {
                root /etc/nginx/default;
                index index.html;
            }
	}
### Setup TestCookie for Protection from Bots ###	
    testcookie off; #default config, module disabled
    #setting cookie info
    testcookie_name Scrape-Protect;
    testcookie_secret j48rk3UnXzmZmoHGbM5A4Va4sdufhM5p; ## needs to be configured based on your needs; DO NOT USE THESE
    testcookie_session $remote_addr;
    testcookie_arg cookietesting; #setting cookie name to bypass settings (manually set cookie)
    testcookie_max_attempts 3;
    testcookie_fallback http://google.com/cookies.html?backurl=http://$host$request_uri;
    testcookie_whitelist {
        8.8.8.8/32;
    }
    testcookie_get_only on;    
    testcookie_redirect_via_refresh off; #setting redirect via html code
    testcookie_refresh_encrypt_cookie on;
    testcookie_refresh_encrypt_cookie_key "=)nI0=,<$X*]NP01vn]Nd~-u?,;p(}n2";  ## needs to be configured based on your needs; DO NOT USE THESE
    testcookie_refresh_encrypt_cookie_iv "=)nI0=,<$X*]NP01vn]Nd~-u?,;p(}n2";   ## needs to be configured based on your needs; DO NOT USE THESE
    #setting response template
    testcookie_refresh_template '<html><body>setting cookie...<script type=\"text/javascript\" src=\"/aes.min.js\" ></script><script>function toNumbers(d){var e=[];d.replace(/(..)/g,function(d){e.push(parseInt(d,16))});return e}function toHex(){for(var d=[],d=1==arguments.length&&arguments[0].constructor==Array?arguments[0]:arguments,e="",f=0;f<d.length;f++)e+=(16>d[f]?"0":"")+d[f].toString(16);return e.toLowerCase()}var a=toNumbers("$testcookie_enc_key"),b=toNumbers("$testcookie_enc_iv"),c=toNumbers("$testcookie_enc_set");document.cookie="BPC="+toHex(slowAES.decrypt(c,2,a,b))+"; expires=Thu, 31-Dec-37 23:55:55 GMT; path=/";location.href="$testcookie_nexturl";</script></body></html>';	
### End TestCookie for Protection from Bots ###	

### Turn on Status page and accounting ###
	http_accounting on;
    vhost_traffic_status_zone;
    vhost_traffic_status_filter_by_set_key $geoip_country_code country::*;

### Turn on Google PageSpeed Globals ###
	pagespeed FileCachePath /var/ngx_pagespeed_cache;
	pagespeed UsePerVhostStatistics on;
	pagespeed MessageBufferSize 100000;


### Customer Configurations ###	
	include conf.d/upstreams/*.conf;
	include conf.d/maps/*.conf;  ## include files in here to map configuration variables to all sites. i.e. asset caching
	include conf.d/requestLimitZones/*.conf;  ## include files in here to limit requests/second - http://nginx.org/en/docs/http/ngx_http_limit_req_module.html
	include conf.d/servers/*.conf;
	include conf.d/SSLservers/*.conf;	
	server {
		listen 127.0.0.1:59145;
		location /nginx_status {
			stub_status on;
			access_log off;
			allow 127.0.0.1;
			allow 116.68.156.113;
			allow 116.68.156.114;						
			deny all;
			}
	}
    server {
        listen 127.0.0.1:6000;
        location /dynamic {
            allow 127.0.0.1;
            deny all;
            dynamic_upstream;
            }
    }
}
